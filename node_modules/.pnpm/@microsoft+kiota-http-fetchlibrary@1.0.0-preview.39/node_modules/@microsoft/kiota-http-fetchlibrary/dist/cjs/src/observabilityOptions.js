"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getObservabilityOptionsFromRequest = exports.ObservabilityOptionsImpl = exports.ObservabilityOptionKey = void 0;
exports.ObservabilityOptionKey = "ObservabilityOptionKey";
class ObservabilityOptionsImpl {
    constructor(originalOptions) {
        this._originalOptions = originalOptions !== null && originalOptions !== void 0 ? originalOptions : {};
    }
    getKey() {
        return exports.ObservabilityOptionKey;
    }
    get includeEUIIAttributes() {
        return this._originalOptions.includeEUIIAttributes;
    }
    set includeEUIIAttributes(value) {
        this._originalOptions.includeEUIIAttributes = value;
    }
    getTracerInstrumentationName() {
        return "@microsoft/kiota-http-fetchlibrary";
    }
}
exports.ObservabilityOptionsImpl = ObservabilityOptionsImpl;
function getObservabilityOptionsFromRequest(requestOptions) {
    if (requestOptions) {
        const observabilityOptions = requestOptions[exports.ObservabilityOptionKey];
        if (observabilityOptions instanceof ObservabilityOptionsImpl) {
            return observabilityOptions;
        }
    }
    return undefined;
}
exports.getObservabilityOptionsFromRequest = getObservabilityOptionsFromRequest;
