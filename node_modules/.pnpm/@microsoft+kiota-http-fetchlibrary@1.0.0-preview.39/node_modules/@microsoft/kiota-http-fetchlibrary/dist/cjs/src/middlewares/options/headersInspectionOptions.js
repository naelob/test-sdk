"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeadersInspectionOptions = exports.HeadersInspectionOptionsKey = void 0;
const kiota_abstractions_1 = require("@microsoft/kiota-abstractions");
exports.HeadersInspectionOptionsKey = "HeadersInspectionOptionsKey";
/**
 * @class
 * @implements RequestOption
 * Options
 * Options to inspect headers
 */
class HeadersInspectionOptions {
    /**
     * @public
     * @getter
     * Gets the request headers
     * @returns the request headers
     */
    getRequestHeaders() {
        return this.requestHeaders;
    }
    /**
     * @public
     * @getter
     * Gets the response headers
     * @returns the response headers
     */
    getResponseHeaders() {
        return this.responseHeaders;
    }
    /**
     * @public
     * @constructor
     * To create an instance of HeadersInspectionOptions
     * @param {HeadersInspectionOptionsParams} [options = {}] - The headers inspection options value
     * @returns An instance of HeadersInspectionOptions
     * @example const options = new HeadersInspectionOptions({ inspectRequestHeaders: true, inspectResponseHeaders: true });
     */
    constructor(options = {}) {
        var _a, _b;
        this.requestHeaders = new kiota_abstractions_1.Headers();
        this.responseHeaders = new kiota_abstractions_1.Headers();
        this.inspectRequestHeaders = (_a = options.inspectRequestHeaders) !== null && _a !== void 0 ? _a : false;
        this.inspectResponseHeaders = (_b = options.inspectResponseHeaders) !== null && _b !== void 0 ? _b : false;
    }
    getKey() {
        return exports.HeadersInspectionOptionsKey;
    }
}
exports.HeadersInspectionOptions = HeadersInspectionOptions;
