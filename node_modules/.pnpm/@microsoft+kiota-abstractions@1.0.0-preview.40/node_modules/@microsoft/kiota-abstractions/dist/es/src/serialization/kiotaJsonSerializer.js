import { deserialize, deserializeCollection, serialize, serializeCollection, serializeCollectionToString as serializeCollectionAsString, serializeToString as serializeAsString, } from "./kiotaSerializer";
const jsonContentType = "application/json";
/**
 * Serializes a parsable object into a buffer
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a buffer containing the serialized value
 */
export function serializeToJson(value, serializationFunction) {
    return serialize(jsonContentType, value, serializationFunction);
}
/**
 * Serializes a parsable object into a string representation
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a string representing the serialized value
 */
export function serializeToJsonAsString(value, serializationFunction) {
    return serializeAsString(jsonContentType, value, serializationFunction);
}
/**
 * Serializes a collection of parsable objects into a buffer
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a string representing the serialized value
 */
export function serializeCollectionToJson(values, serializationFunction) {
    return serializeCollection(jsonContentType, values, serializationFunction);
}
/**
 * Serializes a collection of parsable objects into a string representation
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a string representing the serialized value
 */
export function serializeCollectionToJsonAsString(values, serializationFunction) {
    return serializeCollectionAsString(jsonContentType, values, serializationFunction);
}
/**
 * Deserializes a buffer into a parsable object
 * @param bufferOrString the value to serialize
 * @param factory the factory for the model type
 * @returns the deserialized parsable object
 */
export function deserializeFromJson(bufferOrString, factory) {
    return deserialize(jsonContentType, bufferOrString, factory);
}
/**
 * Deserializes a buffer into a a collection of parsable object
 * @param bufferOrString the value to serialize
 * @param factory the factory for the model type
 * @returns the deserialized collection of parsable objects
 */
export function deserializeCollectionFromJson(bufferOrString, factory) {
    return deserializeCollection(jsonContentType, bufferOrString, factory);
}
//# sourceMappingURL=kiotaJsonSerializer.js.map