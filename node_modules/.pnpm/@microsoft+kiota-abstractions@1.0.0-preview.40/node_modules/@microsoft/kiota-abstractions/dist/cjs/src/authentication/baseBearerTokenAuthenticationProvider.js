"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseBearerTokenAuthenticationProvider = void 0;
const headers_1 = require("../headers");
/** Provides a base class for implementing AuthenticationProvider for Bearer token scheme. */
class BaseBearerTokenAuthenticationProvider {
    /**
     *
     * @param accessTokenProvider
     */
    constructor(accessTokenProvider) {
        this.accessTokenProvider = accessTokenProvider;
        this.authenticateRequest = async (request, additionalAuthenticationContext) => {
            if (!request) {
                throw new Error("request info cannot be null");
            }
            if (additionalAuthenticationContext &&
                additionalAuthenticationContext["claims"] &&
                request.headers.has(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey)) {
                request.headers.delete(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey);
            }
            if (!request.headers ||
                !request.headers.has(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey)) {
                const token = await this.accessTokenProvider.getAuthorizationToken(request.URL, additionalAuthenticationContext);
                if (!request.headers) {
                    request.headers = new headers_1.Headers();
                }
                if (token) {
                    request.headers.add(BaseBearerTokenAuthenticationProvider.authorizationHeaderKey, `Bearer ${token}`);
                }
            }
        };
    }
}
exports.BaseBearerTokenAuthenticationProvider = BaseBearerTokenAuthenticationProvider;
BaseBearerTokenAuthenticationProvider.authorizationHeaderKey = "Authorization";
//# sourceMappingURL=baseBearerTokenAuthenticationProvider.js.map