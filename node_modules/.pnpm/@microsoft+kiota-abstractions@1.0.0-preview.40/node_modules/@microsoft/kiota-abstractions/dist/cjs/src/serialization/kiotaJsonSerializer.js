"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeCollectionFromJson = exports.deserializeFromJson = exports.serializeCollectionToJsonAsString = exports.serializeCollectionToJson = exports.serializeToJsonAsString = exports.serializeToJson = void 0;
const kiotaSerializer_1 = require("./kiotaSerializer");
const jsonContentType = "application/json";
/**
 * Serializes a parsable object into a buffer
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a buffer containing the serialized value
 */
function serializeToJson(value, serializationFunction) {
    return (0, kiotaSerializer_1.serialize)(jsonContentType, value, serializationFunction);
}
exports.serializeToJson = serializeToJson;
/**
 * Serializes a parsable object into a string representation
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a string representing the serialized value
 */
function serializeToJsonAsString(value, serializationFunction) {
    return (0, kiotaSerializer_1.serializeToString)(jsonContentType, value, serializationFunction);
}
exports.serializeToJsonAsString = serializeToJsonAsString;
/**
 * Serializes a collection of parsable objects into a buffer
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a string representing the serialized value
 */
function serializeCollectionToJson(values, serializationFunction) {
    return (0, kiotaSerializer_1.serializeCollection)(jsonContentType, values, serializationFunction);
}
exports.serializeCollectionToJson = serializeCollectionToJson;
/**
 * Serializes a collection of parsable objects into a string representation
 * @param value the value to serialize
 * @param serializationFunction the serialization function for the model type
 * @returns a string representing the serialized value
 */
function serializeCollectionToJsonAsString(values, serializationFunction) {
    return (0, kiotaSerializer_1.serializeCollectionToString)(jsonContentType, values, serializationFunction);
}
exports.serializeCollectionToJsonAsString = serializeCollectionToJsonAsString;
/**
 * Deserializes a buffer into a parsable object
 * @param bufferOrString the value to serialize
 * @param factory the factory for the model type
 * @returns the deserialized parsable object
 */
function deserializeFromJson(bufferOrString, factory) {
    return (0, kiotaSerializer_1.deserialize)(jsonContentType, bufferOrString, factory);
}
exports.deserializeFromJson = deserializeFromJson;
/**
 * Deserializes a buffer into a a collection of parsable object
 * @param bufferOrString the value to serialize
 * @param factory the factory for the model type
 * @returns the deserialized collection of parsable objects
 */
function deserializeCollectionFromJson(bufferOrString, factory) {
    return (0, kiotaSerializer_1.deserializeCollection)(jsonContentType, bufferOrString, factory);
}
exports.deserializeCollectionFromJson = deserializeCollectionFromJson;
//# sourceMappingURL=kiotaJsonSerializer.js.map