/** Maintains a list of valid hosts and allows authentication providers to check whether a host is valid before authenticating a request */
export declare class AllowedHostsValidator {
    private allowedHosts;
    /**
     * Creates a new AllowedHostsValidator object with provided values.
     * @param allowedHosts A list of valid hosts.  If the list is empty, all hosts are valid.
     */
    constructor(allowedHosts?: Set<string>);
    /**
     * Gets the list of valid hosts.  If the list is empty, all hosts are valid.
     * @returns A list of valid hosts.  If the list is empty, all hosts are valid.
     */
    getAllowedHosts(): string[];
    /**
     * Sets the list of valid hosts.  If the list is empty, all hosts are valid.
     * @param allowedHosts A list of valid hosts.  If the list is empty, all hosts are valid.
     */
    setAllowedHosts(allowedHosts: Set<string>): void;
    /**
     * Checks whether the provided host is valid.
     * @param url The url to check.
     */
    isUrlHostValid(url: string): boolean;
    private isHostAndPathValid;
}
//# sourceMappingURL=allowedHostsValidator.d.ts.map