/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { CreateRequestBuilderRequestsMetadata, CreateRequestBuilderUriTemplate, type CreateRequestBuilder } from './create/';
import { SingleRequestBuilderRequestsMetadata, SingleRequestBuilderUriTemplate, type SingleRequestBuilder } from './single/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /linked-users
 */
export interface LinkedUsersRequestBuilder extends BaseRequestBuilder<LinkedUsersRequestBuilder> {
    /**
     * The create property
     */
    get create(): CreateRequestBuilder;
    /**
     * The single property
     */
    get single(): SingleRequestBuilder;
    /**
     * Retrieve Linked Users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ArrayBuffer
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * Retrieve Linked Users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const LinkedUsersRequestBuilderNavigationMetadata: Record<Exclude<keyof LinkedUsersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    create: {
        uriTemplate: CreateRequestBuilderUriTemplate,
        requestsMetadata: CreateRequestBuilderRequestsMetadata,
    },
    single: {
        uriTemplate: SingleRequestBuilderUriTemplate,
        requestsMetadata: SingleRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const LinkedUsersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        adapterMethodName: "sendPrimitiveAsync",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/**
 * Uri template for the request builder.
 */
export const LinkedUsersRequestBuilderUriTemplate = "{+baseurl}/linked-users";
/* tslint:enable */
/* eslint-enable */
