/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUnifiedNoteOutputFromDiscriminatorValue, deserializeIntoApiResponse, serializeApiResponse, serializeUnifiedNoteOutput, type ApiResponse, type UnifiedNoteOutput } from '../../../models/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a NotesGetResponse
 */
export function createNotesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNotesGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoNotesGetResponse(notesGetResponse: Partial<NotesGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoApiResponse(notesGetResponse),
        "data": n => { notesGetResponse.data = n.getObjectValue<UnifiedNoteOutput>(createUnifiedNoteOutputFromDiscriminatorValue); },
    }
}
export interface NotesGetResponse extends ApiResponse, Parsable {
    /**
     * The data property
     */
    data?: UnifiedNoteOutput;
}
/**
 * Builds and executes requests for operations under /crm/notes/{id}
 */
export interface NotesItemRequestBuilder extends BaseRequestBuilder<NotesItemRequestBuilder> {
    /**
     * Retrieve a note from any connected Crm software
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of NotesGetResponse
     */
     get(requestConfiguration?: RequestConfiguration<NotesItemRequestBuilderGetQueryParameters> | undefined) : Promise<NotesGetResponse | undefined>;
    /**
     * Retrieve a note from any connected Crm software
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<NotesItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Retrieve a note from any connected Crm software
 */
export interface NotesItemRequestBuilderGetQueryParameters {
    /**
     * Set to true to include data from the original Crm software.
     */
    remoteData?: boolean;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeNotesGetResponse(writer: SerializationWriter, notesGetResponse: Partial<NotesGetResponse> | undefined = {}) : void {
    serializeApiResponse(writer, notesGetResponse)
    writer.writeObjectValue<UnifiedNoteOutput>("data", notesGetResponse.data, serializeUnifiedNoteOutput);
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const NotesItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "remoteData": "remote_data",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const NotesItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createNotesGetResponseFromDiscriminatorValue,
        queryParametersMapper: NotesItemRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const NotesItemRequestBuilderUriTemplate = "{+baseurl}/crm/notes/{id}{?remote_data*}";
/* tslint:enable */
/* eslint-enable */
