/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUnifiedDealOutputFromDiscriminatorValue, deserializeIntoApiResponse, serializeApiResponse, serializeUnifiedDealInput, serializeUnifiedDealOutput, type ApiResponse, type UnifiedDealInput, type UnifiedDealOutput } from '../../models/';
import { BatchRequestBuilderRequestsMetadata, BatchRequestBuilderUriTemplate, type BatchRequestBuilder } from './batch/';
import { DealsItemRequestBuilderRequestsMetadata, DealsItemRequestBuilderUriTemplate, type DealsItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a dealsGetResponse
 */
export function createDealsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDealsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a dealsPostResponse
 */
export function createDealsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDealsPostResponse;
}
export interface DealsGetResponse extends ApiResponse, Parsable {
    /**
     * The data property
     */
    data?: UnifiedDealOutput;
}
export interface DealsPostResponse extends ApiResponse, Parsable {
    /**
     * The data property
     */
    data?: UnifiedDealOutput;
}
/**
 * Builds and executes requests for operations under /crm/deals
 */
export interface DealsRequestBuilder extends BaseRequestBuilder<DealsRequestBuilder> {
    /**
     * The batch property
     */
    get batch(): BatchRequestBuilder;
    /**
     * Gets an item from the ApiSdk.crm.deals.item collection
     * @param id id of the deal you want to retrieve.
     * @returns a DealsItemRequestBuilder
     */
     byId(id: string) : DealsItemRequestBuilder;
    /**
     * List a batch of Deals
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DealsGetResponse
     */
     get(requestConfiguration?: RequestConfiguration<DealsRequestBuilderGetQueryParameters> | undefined) : Promise<DealsGetResponse | undefined>;
    /**
     * Create a deal in any supported Crm software
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DealsPostResponse
     */
     post(body: UnifiedDealInput, requestConfiguration?: RequestConfiguration<DealsRequestBuilderPostQueryParameters> | undefined) : Promise<DealsPostResponse | undefined>;
    /**
     * List a batch of Deals
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DealsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a deal in any supported Crm software
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: UnifiedDealInput, requestConfiguration?: RequestConfiguration<DealsRequestBuilderPostQueryParameters> | undefined) : RequestInformation;
}
/**
 * List a batch of Deals
 */
export interface DealsRequestBuilderGetQueryParameters {
    /**
     * Set to true to include data from the original Crm software.
     */
    remoteData?: boolean;
}
/**
 * Create a deal in any supported Crm software
 */
export interface DealsRequestBuilderPostQueryParameters {
    /**
     * Set to true to include data from the original Crm software.
     */
    remoteData?: boolean;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoDealsGetResponse(dealsGetResponse: Partial<DealsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoApiResponse(dealsGetResponse),
        "data": n => { dealsGetResponse.data = n.getObjectValue<UnifiedDealOutput>(createUnifiedDealOutputFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoDealsPostResponse(dealsPostResponse: Partial<DealsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoApiResponse(dealsPostResponse),
        "data": n => { dealsPostResponse.data = n.getObjectValue<UnifiedDealOutput>(createUnifiedDealOutputFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeDealsGetResponse(writer: SerializationWriter, dealsGetResponse: Partial<DealsGetResponse> | undefined = {}) : void {
    serializeApiResponse(writer, dealsGetResponse)
    writer.writeObjectValue<UnifiedDealOutput>("data", dealsGetResponse.data, serializeUnifiedDealOutput);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeDealsPostResponse(writer: SerializationWriter, dealsPostResponse: Partial<DealsPostResponse> | undefined = {}) : void {
    serializeApiResponse(writer, dealsPostResponse)
    writer.writeObjectValue<UnifiedDealOutput>("data", dealsPostResponse.data, serializeUnifiedDealOutput);
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DealsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "remoteData": "remote_data",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DealsRequestBuilderNavigationMetadata: Record<Exclude<keyof DealsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        uriTemplate: DealsItemRequestBuilderUriTemplate,
        requestsMetadata: DealsItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["id"],
    },
    batch: {
        uriTemplate: BatchRequestBuilderUriTemplate,
        requestsMetadata: BatchRequestBuilderRequestsMetadata,
    },
};
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DealsRequestBuilderPostQueryParametersMapper: Record<string, string> = {
    "remoteData": "remote_data",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DealsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDealsGetResponseFromDiscriminatorValue,
        queryParametersMapper: DealsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDealsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUnifiedDealInput,
        requestInformationContentSetMethod: "setContentFromParsable",
        queryParametersMapper: DealsRequestBuilderPostQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const DealsRequestBuilderUriTemplate = "{+baseurl}/crm/deals{?remote_data*}";
/* tslint:enable */
/* eslint-enable */
