/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Address extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The address type
     */
    address_type?: string;
    /**
     * The city
     */
    city?: string;
    /**
     * The country
     */
    country?: string;
    /**
     * The owner type of the address
     */
    owner_type?: string;
    /**
     * The postal code
     */
    postal_code?: string;
    /**
     * The state
     */
    state?: string;
    /**
     * The street
     */
    street_1?: string;
    /**
     * More information about the street 
     */
    street_2?: string;
}
export interface ApiKeyDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The keyName property
     */
    keyName?: string;
    /**
     * The projectId property
     */
    projectId?: string;
    /**
     * The userId property
     */
    userId?: string;
}
export interface ApiResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The error property
     */
    errorEscaped?: string;
    /**
     * The message property
     */
    message?: string;
    /**
     * The statusCode property
     */
    statusCode?: number;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a Address
 */
export function createAddressFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddress;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a ApiKeyDto
 */
export function createApiKeyDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApiKeyDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a ApiResponse
 */
export function createApiResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoApiResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a CreateLinkedUserDto
 */
export function createCreateLinkedUserDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateLinkedUserDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a CreateMagicLinkDto
 */
export function createCreateMagicLinkDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateMagicLinkDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a CreateOrganizationDto
 */
export function createCreateOrganizationDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateOrganizationDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a CreateProjectDto
 */
export function createCreateProjectDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateProjectDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a CreateUserDto
 */
export function createCreateUserDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateUserDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a DefineTargetFieldDto
 */
export function createDefineTargetFieldDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDefineTargetFieldDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a Email
 */
export function createEmailFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmail;
}
export interface CreateLinkedUserDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The alias property
     */
    alias?: string;
    /**
     * The id_project property
     */
    id_project?: string;
    /**
     * The linked_user_origin_id property
     */
    linked_user_origin_id?: string;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a LoginDto
 */
export function createLoginDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginDto;
}
export interface CreateMagicLinkDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The alias property
     */
    alias?: string;
    /**
     * The email property
     */
    email?: string;
    /**
     * The id_project property
     */
    id_project?: string;
    /**
     * The linked_user_origin_id property
     */
    linked_user_origin_id?: string;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a MapFieldToProviderDto
 */
export function createMapFieldToProviderDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapFieldToProviderDto;
}
export interface CreateOrganizationDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name property
     */
    name?: string;
    /**
     * The stripe_customer_id property
     */
    stripe_customer_id?: string;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a PassThroughRequestDto_data
 */
export function createPassThroughRequestDto_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassThroughRequestDto_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a PassThroughRequestDto_headers
 */
export function createPassThroughRequestDto_headersFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassThroughRequestDto_headers;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a PassThroughRequestDto
 */
export function createPassThroughRequestDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassThroughRequestDto;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a PassThroughResponse_data
 */
export function createPassThroughResponse_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassThroughResponse_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a PassThroughResponse
 */
export function createPassThroughResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassThroughResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a Phone
 */
export function createPhoneFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPhone;
}
export interface CreateProjectDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The id_organization property
     */
    id_organization?: string;
    /**
     * The name property
     */
    name?: string;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAccountOutput_field_mappings
 */
export function createUnifiedAccountOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAccountOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAccountOutput_remote_data
 */
export function createUnifiedAccountOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAccountOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAccountOutput
 */
export function createUnifiedAccountOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAccountOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAttachmentInput_field_mappings
 */
export function createUnifiedAttachmentInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAttachmentInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAttachmentInput
 */
export function createUnifiedAttachmentInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAttachmentInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAttachmentOutput_field_mappings
 */
export function createUnifiedAttachmentOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAttachmentOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAttachmentOutput_remote_data
 */
export function createUnifiedAttachmentOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAttachmentOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedAttachmentOutput
 */
export function createUnifiedAttachmentOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedAttachmentOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCommentInput
 */
export function createUnifiedCommentInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCommentInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCommentOutput_remote_data
 */
export function createUnifiedCommentOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCommentOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCommentOutput
 */
export function createUnifiedCommentOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCommentOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCompanyInput_field_mappings
 */
export function createUnifiedCompanyInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCompanyInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCompanyInput
 */
export function createUnifiedCompanyInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCompanyInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCompanyOutput_field_mappings
 */
export function createUnifiedCompanyOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCompanyOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCompanyOutput_remote_data
 */
export function createUnifiedCompanyOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCompanyOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedCompanyOutput
 */
export function createUnifiedCompanyOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedCompanyOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedContactInput_field_mappings
 */
export function createUnifiedContactInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedContactInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedContactInput
 */
export function createUnifiedContactInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedContactInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedContactOutput_field_mappings
 */
export function createUnifiedContactOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedContactOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedContactOutput_remote_data
 */
export function createUnifiedContactOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedContactOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedContactOutput
 */
export function createUnifiedContactOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedContactOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedDealInput_field_mappings
 */
export function createUnifiedDealInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedDealInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedDealInput
 */
export function createUnifiedDealInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedDealInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedDealOutput_field_mappings
 */
export function createUnifiedDealOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedDealOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedDealOutput_remote_data
 */
export function createUnifiedDealOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedDealOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedDealOutput
 */
export function createUnifiedDealOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedDealOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedEngagementInput_field_mappings
 */
export function createUnifiedEngagementInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedEngagementInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedEngagementInput
 */
export function createUnifiedEngagementInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedEngagementInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedEngagementOutput_field_mappings
 */
export function createUnifiedEngagementOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedEngagementOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedEngagementOutput_remote_data
 */
export function createUnifiedEngagementOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedEngagementOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedEngagementOutput
 */
export function createUnifiedEngagementOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedEngagementOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedNoteInput_field_mappings
 */
export function createUnifiedNoteInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedNoteInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedNoteInput
 */
export function createUnifiedNoteInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedNoteInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedNoteOutput_field_mappings
 */
export function createUnifiedNoteOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedNoteOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedNoteOutput_remote_data
 */
export function createUnifiedNoteOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedNoteOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedNoteOutput
 */
export function createUnifiedNoteOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedNoteOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedStageOutput_field_mappings
 */
export function createUnifiedStageOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedStageOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedStageOutput_remote_data
 */
export function createUnifiedStageOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedStageOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedStageOutput
 */
export function createUnifiedStageOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedStageOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTagOutput_field_mappings
 */
export function createUnifiedTagOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTagOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTagOutput_remote_data
 */
export function createUnifiedTagOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTagOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTagOutput
 */
export function createUnifiedTagOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTagOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTaskInput_field_mappings
 */
export function createUnifiedTaskInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTaskInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTaskInput
 */
export function createUnifiedTaskInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTaskInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTaskOutput_field_mappings
 */
export function createUnifiedTaskOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTaskOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTaskOutput_remote_data
 */
export function createUnifiedTaskOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTaskOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTaskOutput
 */
export function createUnifiedTaskOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTaskOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTeamOutput_field_mappings
 */
export function createUnifiedTeamOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTeamOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTeamOutput_remote_data
 */
export function createUnifiedTeamOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTeamOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTeamOutput
 */
export function createUnifiedTeamOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTeamOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTicketInput_field_mappings
 */
export function createUnifiedTicketInput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTicketInput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTicketInput
 */
export function createUnifiedTicketInputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTicketInput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTicketOutput_field_mappings
 */
export function createUnifiedTicketOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTicketOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTicketOutput_remote_data
 */
export function createUnifiedTicketOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTicketOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedTicketOutput
 */
export function createUnifiedTicketOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedTicketOutput;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedUserOutput_field_mappings
 */
export function createUnifiedUserOutput_field_mappingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedUserOutput_field_mappings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedUserOutput_remote_data
 */
export function createUnifiedUserOutput_remote_dataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedUserOutput_remote_data;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a UnifiedUserOutput
 */
export function createUnifiedUserOutputFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedUserOutput;
}
export interface CreateUserDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The email property
     */
    email?: string;
    /**
     * The first_name property
     */
    first_name?: string;
    /**
     * The id_organisation property
     */
    id_organisation?: string;
    /**
     * The last_name property
     */
    last_name?: string;
    /**
     * The password_hash property
     */
    password_hash?: string;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a WebhookDto
 */
export function createWebhookDtoFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWebhookDto;
}
export interface DefineTargetFieldDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The data_type property
     */
    data_type?: string;
    /**
     * The description property
     */
    description?: string;
    /**
     * The name property
     */
    name?: string;
    /**
     * The object_type_owner property
     */
    object_type_owner?: string;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoAddress(address: Partial<Address> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address_type": n => { address.address_type = n.getStringValue(); },
        "city": n => { address.city = n.getStringValue(); },
        "country": n => { address.country = n.getStringValue(); },
        "owner_type": n => { address.owner_type = n.getStringValue(); },
        "postal_code": n => { address.postal_code = n.getStringValue(); },
        "state": n => { address.state = n.getStringValue(); },
        "street_1": n => { address.street_1 = n.getStringValue(); },
        "street_2": n => { address.street_2 = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoApiKeyDto(apiKeyDto: Partial<ApiKeyDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "keyName": n => { apiKeyDto.keyName = n.getStringValue(); },
        "projectId": n => { apiKeyDto.projectId = n.getStringValue(); },
        "userId": n => { apiKeyDto.userId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoApiResponse(apiResponse: Partial<ApiResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "error": n => { apiResponse.errorEscaped = n.getStringValue(); },
        "message": n => { apiResponse.message = n.getStringValue(); },
        "statusCode": n => { apiResponse.statusCode = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCreateLinkedUserDto(createLinkedUserDto: Partial<CreateLinkedUserDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "alias": n => { createLinkedUserDto.alias = n.getStringValue(); },
        "id_project": n => { createLinkedUserDto.id_project = n.getStringValue(); },
        "linked_user_origin_id": n => { createLinkedUserDto.linked_user_origin_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCreateMagicLinkDto(createMagicLinkDto: Partial<CreateMagicLinkDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "alias": n => { createMagicLinkDto.alias = n.getStringValue(); },
        "email": n => { createMagicLinkDto.email = n.getStringValue(); },
        "id_project": n => { createMagicLinkDto.id_project = n.getStringValue(); },
        "linked_user_origin_id": n => { createMagicLinkDto.linked_user_origin_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCreateOrganizationDto(createOrganizationDto: Partial<CreateOrganizationDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { createOrganizationDto.name = n.getStringValue(); },
        "stripe_customer_id": n => { createOrganizationDto.stripe_customer_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCreateProjectDto(createProjectDto: Partial<CreateProjectDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "id_organization": n => { createProjectDto.id_organization = n.getStringValue(); },
        "name": n => { createProjectDto.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCreateUserDto(createUserDto: Partial<CreateUserDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { createUserDto.email = n.getStringValue(); },
        "first_name": n => { createUserDto.first_name = n.getStringValue(); },
        "id_organisation": n => { createUserDto.id_organisation = n.getStringValue(); },
        "last_name": n => { createUserDto.last_name = n.getStringValue(); },
        "password_hash": n => { createUserDto.password_hash = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoDefineTargetFieldDto(defineTargetFieldDto: Partial<DefineTargetFieldDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data_type": n => { defineTargetFieldDto.data_type = n.getStringValue(); },
        "description": n => { defineTargetFieldDto.description = n.getStringValue(); },
        "name": n => { defineTargetFieldDto.name = n.getStringValue(); },
        "object_type_owner": n => { defineTargetFieldDto.object_type_owner = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoEmail(email: Partial<Email> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email_address": n => { email.email_address = n.getStringValue(); },
        "email_address_type": n => { email.email_address_type = n.getStringValue(); },
        "owner_type": n => { email.owner_type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoLoginDto(loginDto: Partial<LoginDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { loginDto.email = n.getStringValue(); },
        "id_user": n => { loginDto.id_user = n.getStringValue(); },
        "password_hash": n => { loginDto.password_hash = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoMapFieldToProviderDto(mapFieldToProviderDto: Partial<MapFieldToProviderDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "attributeId": n => { mapFieldToProviderDto.attributeId = n.getStringValue(); },
        "linked_user_id": n => { mapFieldToProviderDto.linked_user_id = n.getStringValue(); },
        "source_custom_field_id": n => { mapFieldToProviderDto.source_custom_field_id = n.getStringValue(); },
        "source_provider": n => { mapFieldToProviderDto.source_provider = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPassThroughRequestDto(passThroughRequestDto: Partial<PassThroughRequestDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { passThroughRequestDto.data = n.getObjectValue<PassThroughRequestDto_data>(createPassThroughRequestDto_dataFromDiscriminatorValue); },
        "headers": n => { passThroughRequestDto.headers = n.getObjectValue<PassThroughRequestDto_headers>(createPassThroughRequestDto_headersFromDiscriminatorValue); },
        "method": n => { passThroughRequestDto.method = n.getEnumValue<PassThroughRequestDto_method>(PassThroughRequestDto_methodObject); },
        "path": n => { passThroughRequestDto.path = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPassThroughRequestDto_data(passThroughRequestDto_data: Partial<PassThroughRequestDto_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPassThroughRequestDto_headers(passThroughRequestDto_headers: Partial<PassThroughRequestDto_headers> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPassThroughResponse(passThroughResponse: Partial<PassThroughResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { passThroughResponse.data = n.getObjectValue<PassThroughResponse_data>(createPassThroughResponse_dataFromDiscriminatorValue); },
        "status": n => { passThroughResponse.status = n.getNumberValue(); },
        "url": n => { passThroughResponse.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPassThroughResponse_data(passThroughResponse_data: Partial<PassThroughResponse_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPhone(phone: Partial<Phone> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "owner_type": n => { phone.owner_type = n.getStringValue(); },
        "phone_number": n => { phone.phone_number = n.getStringValue(); },
        "phone_type": n => { phone.phone_type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAccountOutput(unifiedAccountOutput: Partial<UnifiedAccountOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "domains": n => { unifiedAccountOutput.domains = n.getCollectionOfPrimitiveValues<string>(); },
        "field_mappings": n => { unifiedAccountOutput.field_mappings = n.getObjectValue<UnifiedAccountOutput_field_mappings>(createUnifiedAccountOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedAccountOutput.id = n.getStringValue(); },
        "name": n => { unifiedAccountOutput.name = n.getStringValue(); },
        "remote_data": n => { unifiedAccountOutput.remote_data = n.getObjectValue<UnifiedAccountOutput_remote_data>(createUnifiedAccountOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedAccountOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAccountOutput_field_mappings(unifiedAccountOutput_field_mappings: Partial<UnifiedAccountOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAccountOutput_remote_data(unifiedAccountOutput_remote_data: Partial<UnifiedAccountOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAttachmentInput(unifiedAttachmentInput: Partial<UnifiedAttachmentInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedAttachmentInput.field_mappings = n.getObjectValue<UnifiedAttachmentInput_field_mappings>(createUnifiedAttachmentInput_field_mappingsFromDiscriminatorValue); },
        "file_name": n => { unifiedAttachmentInput.file_name = n.getStringValue(); },
        "file_url": n => { unifiedAttachmentInput.file_url = n.getStringValue(); },
        "uploader": n => { unifiedAttachmentInput.uploader = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAttachmentInput_field_mappings(unifiedAttachmentInput_field_mappings: Partial<UnifiedAttachmentInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAttachmentOutput(unifiedAttachmentOutput: Partial<UnifiedAttachmentOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedAttachmentOutput.field_mappings = n.getObjectValue<UnifiedAttachmentOutput_field_mappings>(createUnifiedAttachmentOutput_field_mappingsFromDiscriminatorValue); },
        "file_name": n => { unifiedAttachmentOutput.file_name = n.getStringValue(); },
        "file_url": n => { unifiedAttachmentOutput.file_url = n.getStringValue(); },
        "id": n => { unifiedAttachmentOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedAttachmentOutput.remote_data = n.getObjectValue<UnifiedAttachmentOutput_remote_data>(createUnifiedAttachmentOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedAttachmentOutput.remote_id = n.getStringValue(); },
        "uploader": n => { unifiedAttachmentOutput.uploader = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAttachmentOutput_field_mappings(unifiedAttachmentOutput_field_mappings: Partial<UnifiedAttachmentOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedAttachmentOutput_remote_data(unifiedAttachmentOutput_remote_data: Partial<UnifiedAttachmentOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCommentInput(unifiedCommentInput: Partial<UnifiedCommentInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "attachments": n => { unifiedCommentInput.attachments = n.getCollectionOfPrimitiveValues<string>(); },
        "body": n => { unifiedCommentInput.body = n.getStringValue(); },
        "contact_id": n => { unifiedCommentInput.contact_id = n.getStringValue(); },
        "creator_type": n => { unifiedCommentInput.creator_type = n.getStringValue(); },
        "html_body": n => { unifiedCommentInput.html_body = n.getStringValue(); },
        "is_private": n => { unifiedCommentInput.is_private = n.getBooleanValue(); },
        "ticket_id": n => { unifiedCommentInput.ticket_id = n.getStringValue(); },
        "user_id": n => { unifiedCommentInput.user_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCommentOutput(unifiedCommentOutput: Partial<UnifiedCommentOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "attachments": n => { unifiedCommentOutput.attachments = n.getCollectionOfObjectValues<UnifiedAttachmentOutput>(createUnifiedAttachmentOutputFromDiscriminatorValue); },
        "body": n => { unifiedCommentOutput.body = n.getStringValue(); },
        "contact_id": n => { unifiedCommentOutput.contact_id = n.getStringValue(); },
        "creator_type": n => { unifiedCommentOutput.creator_type = n.getStringValue(); },
        "html_body": n => { unifiedCommentOutput.html_body = n.getStringValue(); },
        "id": n => { unifiedCommentOutput.id = n.getStringValue(); },
        "is_private": n => { unifiedCommentOutput.is_private = n.getBooleanValue(); },
        "remote_data": n => { unifiedCommentOutput.remote_data = n.getObjectValue<UnifiedCommentOutput_remote_data>(createUnifiedCommentOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedCommentOutput.remote_id = n.getStringValue(); },
        "ticket_id": n => { unifiedCommentOutput.ticket_id = n.getStringValue(); },
        "user_id": n => { unifiedCommentOutput.user_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCommentOutput_remote_data(unifiedCommentOutput_remote_data: Partial<UnifiedCommentOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCompanyInput(unifiedCompanyInput: Partial<UnifiedCompanyInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedCompanyInput.field_mappings = n.getObjectValue<UnifiedCompanyInput_field_mappings>(createUnifiedCompanyInput_field_mappingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCompanyInput_field_mappings(unifiedCompanyInput_field_mappings: Partial<UnifiedCompanyInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCompanyOutput(unifiedCompanyOutput: Partial<UnifiedCompanyOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedCompanyOutput.field_mappings = n.getObjectValue<UnifiedCompanyOutput_field_mappings>(createUnifiedCompanyOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedCompanyOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedCompanyOutput.remote_data = n.getObjectValue<UnifiedCompanyOutput_remote_data>(createUnifiedCompanyOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedCompanyOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCompanyOutput_field_mappings(unifiedCompanyOutput_field_mappings: Partial<UnifiedCompanyOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedCompanyOutput_remote_data(unifiedCompanyOutput_remote_data: Partial<UnifiedCompanyOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedContactInput(unifiedContactInput: Partial<UnifiedContactInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "addresses": n => { unifiedContactInput.addresses = n.getCollectionOfObjectValues<Address>(createAddressFromDiscriminatorValue); },
        "email_addresses": n => { unifiedContactInput.email_addresses = n.getCollectionOfObjectValues<Email>(createEmailFromDiscriminatorValue); },
        "field_mappings": n => { unifiedContactInput.field_mappings = n.getObjectValue<UnifiedContactInput_field_mappings>(createUnifiedContactInput_field_mappingsFromDiscriminatorValue); },
        "first_name": n => { unifiedContactInput.first_name = n.getStringValue(); },
        "last_name": n => { unifiedContactInput.last_name = n.getStringValue(); },
        "phone_numbers": n => { unifiedContactInput.phone_numbers = n.getCollectionOfObjectValues<Phone>(createPhoneFromDiscriminatorValue); },
        "user_id": n => { unifiedContactInput.user_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedContactInput_field_mappings(unifiedContactInput_field_mappings: Partial<UnifiedContactInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedContactOutput(unifiedContactOutput: Partial<UnifiedContactOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "details": n => { unifiedContactOutput.details = n.getStringValue(); },
        "email_address": n => { unifiedContactOutput.email_address = n.getStringValue(); },
        "field_mappings": n => { unifiedContactOutput.field_mappings = n.getObjectValue<UnifiedContactOutput_field_mappings>(createUnifiedContactOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedContactOutput.id = n.getStringValue(); },
        "name": n => { unifiedContactOutput.name = n.getStringValue(); },
        "phone_number": n => { unifiedContactOutput.phone_number = n.getStringValue(); },
        "remote_data": n => { unifiedContactOutput.remote_data = n.getObjectValue<UnifiedContactOutput_remote_data>(createUnifiedContactOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedContactOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedContactOutput_field_mappings(unifiedContactOutput_field_mappings: Partial<UnifiedContactOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedContactOutput_remote_data(unifiedContactOutput_remote_data: Partial<UnifiedContactOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedDealInput(unifiedDealInput: Partial<UnifiedDealInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedDealInput.field_mappings = n.getObjectValue<UnifiedDealInput_field_mappings>(createUnifiedDealInput_field_mappingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedDealInput_field_mappings(unifiedDealInput_field_mappings: Partial<UnifiedDealInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedDealOutput(unifiedDealOutput: Partial<UnifiedDealOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedDealOutput.field_mappings = n.getObjectValue<UnifiedDealOutput_field_mappings>(createUnifiedDealOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedDealOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedDealOutput.remote_data = n.getObjectValue<UnifiedDealOutput_remote_data>(createUnifiedDealOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedDealOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedDealOutput_field_mappings(unifiedDealOutput_field_mappings: Partial<UnifiedDealOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedDealOutput_remote_data(unifiedDealOutput_remote_data: Partial<UnifiedDealOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedEngagementInput(unifiedEngagementInput: Partial<UnifiedEngagementInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedEngagementInput.field_mappings = n.getObjectValue<UnifiedEngagementInput_field_mappings>(createUnifiedEngagementInput_field_mappingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedEngagementInput_field_mappings(unifiedEngagementInput_field_mappings: Partial<UnifiedEngagementInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedEngagementOutput(unifiedEngagementOutput: Partial<UnifiedEngagementOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedEngagementOutput.field_mappings = n.getObjectValue<UnifiedEngagementOutput_field_mappings>(createUnifiedEngagementOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedEngagementOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedEngagementOutput.remote_data = n.getObjectValue<UnifiedEngagementOutput_remote_data>(createUnifiedEngagementOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedEngagementOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedEngagementOutput_field_mappings(unifiedEngagementOutput_field_mappings: Partial<UnifiedEngagementOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedEngagementOutput_remote_data(unifiedEngagementOutput_remote_data: Partial<UnifiedEngagementOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedNoteInput(unifiedNoteInput: Partial<UnifiedNoteInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedNoteInput.field_mappings = n.getObjectValue<UnifiedNoteInput_field_mappings>(createUnifiedNoteInput_field_mappingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedNoteInput_field_mappings(unifiedNoteInput_field_mappings: Partial<UnifiedNoteInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedNoteOutput(unifiedNoteOutput: Partial<UnifiedNoteOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedNoteOutput.field_mappings = n.getObjectValue<UnifiedNoteOutput_field_mappings>(createUnifiedNoteOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedNoteOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedNoteOutput.remote_data = n.getObjectValue<UnifiedNoteOutput_remote_data>(createUnifiedNoteOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedNoteOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedNoteOutput_field_mappings(unifiedNoteOutput_field_mappings: Partial<UnifiedNoteOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedNoteOutput_remote_data(unifiedNoteOutput_remote_data: Partial<UnifiedNoteOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedStageOutput(unifiedStageOutput: Partial<UnifiedStageOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedStageOutput.field_mappings = n.getObjectValue<UnifiedStageOutput_field_mappings>(createUnifiedStageOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedStageOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedStageOutput.remote_data = n.getObjectValue<UnifiedStageOutput_remote_data>(createUnifiedStageOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedStageOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedStageOutput_field_mappings(unifiedStageOutput_field_mappings: Partial<UnifiedStageOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedStageOutput_remote_data(unifiedStageOutput_remote_data: Partial<UnifiedStageOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTagOutput(unifiedTagOutput: Partial<UnifiedTagOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedTagOutput.field_mappings = n.getObjectValue<UnifiedTagOutput_field_mappings>(createUnifiedTagOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedTagOutput.id = n.getStringValue(); },
        "name": n => { unifiedTagOutput.name = n.getStringValue(); },
        "remote_data": n => { unifiedTagOutput.remote_data = n.getObjectValue<UnifiedTagOutput_remote_data>(createUnifiedTagOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedTagOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTagOutput_field_mappings(unifiedTagOutput_field_mappings: Partial<UnifiedTagOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTagOutput_remote_data(unifiedTagOutput_remote_data: Partial<UnifiedTagOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTaskInput(unifiedTaskInput: Partial<UnifiedTaskInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedTaskInput.field_mappings = n.getObjectValue<UnifiedTaskInput_field_mappings>(createUnifiedTaskInput_field_mappingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTaskInput_field_mappings(unifiedTaskInput_field_mappings: Partial<UnifiedTaskInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTaskOutput(unifiedTaskOutput: Partial<UnifiedTaskOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "field_mappings": n => { unifiedTaskOutput.field_mappings = n.getObjectValue<UnifiedTaskOutput_field_mappings>(createUnifiedTaskOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedTaskOutput.id = n.getStringValue(); },
        "remote_data": n => { unifiedTaskOutput.remote_data = n.getObjectValue<UnifiedTaskOutput_remote_data>(createUnifiedTaskOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedTaskOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTaskOutput_field_mappings(unifiedTaskOutput_field_mappings: Partial<UnifiedTaskOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTaskOutput_remote_data(unifiedTaskOutput_remote_data: Partial<UnifiedTaskOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTeamOutput(unifiedTeamOutput: Partial<UnifiedTeamOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { unifiedTeamOutput.description = n.getStringValue(); },
        "field_mappings": n => { unifiedTeamOutput.field_mappings = n.getObjectValue<UnifiedTeamOutput_field_mappings>(createUnifiedTeamOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedTeamOutput.id = n.getStringValue(); },
        "name": n => { unifiedTeamOutput.name = n.getStringValue(); },
        "remote_data": n => { unifiedTeamOutput.remote_data = n.getObjectValue<UnifiedTeamOutput_remote_data>(createUnifiedTeamOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedTeamOutput.remote_id = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTeamOutput_field_mappings(unifiedTeamOutput_field_mappings: Partial<UnifiedTeamOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTeamOutput_remote_data(unifiedTeamOutput_remote_data: Partial<UnifiedTeamOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTicketInput(unifiedTicketInput: Partial<UnifiedTicketInput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "account_id": n => { unifiedTicketInput.account_id = n.getStringValue(); },
        "assigned_to": n => { unifiedTicketInput.assigned_to = n.getCollectionOfPrimitiveValues<string>(); },
        "comment": n => { unifiedTicketInput.comment = n.getCollectionOfPrimitiveValues<string>(); },
        "completed_at": n => { unifiedTicketInput.completed_at = n.getDateValue(); },
        "contact_id": n => { unifiedTicketInput.contact_id = n.getStringValue(); },
        "description": n => { unifiedTicketInput.description = n.getCollectionOfPrimitiveValues<string>(); },
        "due_date": n => { unifiedTicketInput.due_date = n.getDateValue(); },
        "field_mappings": n => { unifiedTicketInput.field_mappings = n.getObjectValue<UnifiedTicketInput_field_mappings>(createUnifiedTicketInput_field_mappingsFromDiscriminatorValue); },
        "name": n => { unifiedTicketInput.name = n.getStringValue(); },
        "parent_ticket": n => { unifiedTicketInput.parent_ticket = n.getStringValue(); },
        "priority": n => { unifiedTicketInput.priority = n.getStringValue(); },
        "status": n => { unifiedTicketInput.status = n.getStringValue(); },
        "tags": n => { unifiedTicketInput.tags = n.getCollectionOfPrimitiveValues<string>(); },
        "type": n => { unifiedTicketInput.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTicketInput_field_mappings(unifiedTicketInput_field_mappings: Partial<UnifiedTicketInput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTicketOutput(unifiedTicketOutput: Partial<UnifiedTicketOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "account_id": n => { unifiedTicketOutput.account_id = n.getStringValue(); },
        "assigned_to": n => { unifiedTicketOutput.assigned_to = n.getCollectionOfPrimitiveValues<string>(); },
        "comment": n => { unifiedTicketOutput.comment = n.getCollectionOfPrimitiveValues<string>(); },
        "completed_at": n => { unifiedTicketOutput.completed_at = n.getDateValue(); },
        "contact_id": n => { unifiedTicketOutput.contact_id = n.getStringValue(); },
        "description": n => { unifiedTicketOutput.description = n.getCollectionOfPrimitiveValues<string>(); },
        "due_date": n => { unifiedTicketOutput.due_date = n.getDateValue(); },
        "field_mappings": n => { unifiedTicketOutput.field_mappings = n.getObjectValue<UnifiedTicketOutput_field_mappings>(createUnifiedTicketOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedTicketOutput.id = n.getStringValue(); },
        "name": n => { unifiedTicketOutput.name = n.getStringValue(); },
        "parent_ticket": n => { unifiedTicketOutput.parent_ticket = n.getStringValue(); },
        "priority": n => { unifiedTicketOutput.priority = n.getStringValue(); },
        "remote_data": n => { unifiedTicketOutput.remote_data = n.getObjectValue<UnifiedTicketOutput_remote_data>(createUnifiedTicketOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedTicketOutput.remote_id = n.getStringValue(); },
        "status": n => { unifiedTicketOutput.status = n.getStringValue(); },
        "tags": n => { unifiedTicketOutput.tags = n.getCollectionOfPrimitiveValues<string>(); },
        "type": n => { unifiedTicketOutput.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTicketOutput_field_mappings(unifiedTicketOutput_field_mappings: Partial<UnifiedTicketOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedTicketOutput_remote_data(unifiedTicketOutput_remote_data: Partial<UnifiedTicketOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedUserOutput(unifiedUserOutput: Partial<UnifiedUserOutput> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email_address": n => { unifiedUserOutput.email_address = n.getStringValue(); },
        "field_mappings": n => { unifiedUserOutput.field_mappings = n.getObjectValue<UnifiedUserOutput_field_mappings>(createUnifiedUserOutput_field_mappingsFromDiscriminatorValue); },
        "id": n => { unifiedUserOutput.id = n.getStringValue(); },
        "name": n => { unifiedUserOutput.name = n.getStringValue(); },
        "remote_data": n => { unifiedUserOutput.remote_data = n.getObjectValue<UnifiedUserOutput_remote_data>(createUnifiedUserOutput_remote_dataFromDiscriminatorValue); },
        "remote_id": n => { unifiedUserOutput.remote_id = n.getStringValue(); },
        "teams": n => { unifiedUserOutput.teams = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedUserOutput_field_mappings(unifiedUserOutput_field_mappings: Partial<UnifiedUserOutput_field_mappings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUnifiedUserOutput_remote_data(unifiedUserOutput_remote_data: Partial<UnifiedUserOutput_remote_data> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoWebhookDto(webhookDto: Partial<WebhookDto> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { webhookDto.description = n.getStringValue(); },
        "id_project": n => { webhookDto.id_project = n.getStringValue(); },
        "scope": n => { webhookDto.scope = n.getCollectionOfPrimitiveValues<string>(); },
        "url": n => { webhookDto.url = n.getStringValue(); },
    }
}
export interface Email extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The email address
     */
    email_address?: string;
    /**
     * The email address type
     */
    email_address_type?: string;
    /**
     * The owner type of an email
     */
    owner_type?: string;
}
export interface LoginDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The email property
     */
    email?: string;
    /**
     * The id_user property
     */
    id_user?: string;
    /**
     * The password_hash property
     */
    password_hash?: string;
}
export interface MapFieldToProviderDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The attributeId property
     */
    attributeId?: string;
    /**
     * The linked_user_id property
     */
    linked_user_id?: string;
    /**
     * The source_custom_field_id property
     */
    source_custom_field_id?: string;
    /**
     * The source_provider property
     */
    source_provider?: string;
}
export interface PassThroughRequestDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The data property
     */
    data?: PassThroughRequestDto_data;
    /**
     * The headers property
     */
    headers?: PassThroughRequestDto_headers;
    /**
     * The method property
     */
    method?: PassThroughRequestDto_method;
    /**
     * The path property
     */
    path?: string;
}
export interface PassThroughRequestDto_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface PassThroughRequestDto_headers extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export type PassThroughRequestDto_method = (typeof PassThroughRequestDto_methodObject)[keyof typeof PassThroughRequestDto_methodObject];
export interface PassThroughResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The data property
     */
    data?: PassThroughResponse_data;
    /**
     * The status property
     */
    status?: number;
    /**
     * The url property
     */
    url?: string;
}
export interface PassThroughResponse_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface Phone extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The owner type of a phone number
     */
    owner_type?: string;
    /**
     * The phone number
     */
    phone_number?: string;
    /**
     * The phone type
     */
    phone_type?: string;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeAddress(writer: SerializationWriter, address: Partial<Address> | undefined = {}) : void {
    writer.writeStringValue("address_type", address.address_type);
    writer.writeStringValue("city", address.city);
    writer.writeStringValue("country", address.country);
    writer.writeStringValue("owner_type", address.owner_type);
    writer.writeStringValue("postal_code", address.postal_code);
    writer.writeStringValue("state", address.state);
    writer.writeStringValue("street_1", address.street_1);
    writer.writeStringValue("street_2", address.street_2);
    writer.writeAdditionalData(address.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeApiKeyDto(writer: SerializationWriter, apiKeyDto: Partial<ApiKeyDto> | undefined = {}) : void {
    writer.writeStringValue("keyName", apiKeyDto.keyName);
    writer.writeStringValue("projectId", apiKeyDto.projectId);
    writer.writeStringValue("userId", apiKeyDto.userId);
    writer.writeAdditionalData(apiKeyDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeApiResponse(writer: SerializationWriter, apiResponse: Partial<ApiResponse> | undefined = {}) : void {
    writer.writeStringValue("error", apiResponse.errorEscaped);
    writer.writeStringValue("message", apiResponse.message);
    writer.writeNumberValue("statusCode", apiResponse.statusCode);
    writer.writeAdditionalData(apiResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCreateLinkedUserDto(writer: SerializationWriter, createLinkedUserDto: Partial<CreateLinkedUserDto> | undefined = {}) : void {
    writer.writeStringValue("alias", createLinkedUserDto.alias);
    writer.writeStringValue("id_project", createLinkedUserDto.id_project);
    writer.writeStringValue("linked_user_origin_id", createLinkedUserDto.linked_user_origin_id);
    writer.writeAdditionalData(createLinkedUserDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCreateMagicLinkDto(writer: SerializationWriter, createMagicLinkDto: Partial<CreateMagicLinkDto> | undefined = {}) : void {
    writer.writeStringValue("alias", createMagicLinkDto.alias);
    writer.writeStringValue("email", createMagicLinkDto.email);
    writer.writeStringValue("id_project", createMagicLinkDto.id_project);
    writer.writeStringValue("linked_user_origin_id", createMagicLinkDto.linked_user_origin_id);
    writer.writeAdditionalData(createMagicLinkDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCreateOrganizationDto(writer: SerializationWriter, createOrganizationDto: Partial<CreateOrganizationDto> | undefined = {}) : void {
    writer.writeStringValue("name", createOrganizationDto.name);
    writer.writeStringValue("stripe_customer_id", createOrganizationDto.stripe_customer_id);
    writer.writeAdditionalData(createOrganizationDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCreateProjectDto(writer: SerializationWriter, createProjectDto: Partial<CreateProjectDto> | undefined = {}) : void {
    writer.writeStringValue("id_organization", createProjectDto.id_organization);
    writer.writeStringValue("name", createProjectDto.name);
    writer.writeAdditionalData(createProjectDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCreateUserDto(writer: SerializationWriter, createUserDto: Partial<CreateUserDto> | undefined = {}) : void {
    writer.writeStringValue("email", createUserDto.email);
    writer.writeStringValue("first_name", createUserDto.first_name);
    writer.writeStringValue("id_organisation", createUserDto.id_organisation);
    writer.writeStringValue("last_name", createUserDto.last_name);
    writer.writeStringValue("password_hash", createUserDto.password_hash);
    writer.writeAdditionalData(createUserDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeDefineTargetFieldDto(writer: SerializationWriter, defineTargetFieldDto: Partial<DefineTargetFieldDto> | undefined = {}) : void {
    writer.writeStringValue("data_type", defineTargetFieldDto.data_type);
    writer.writeStringValue("description", defineTargetFieldDto.description);
    writer.writeStringValue("name", defineTargetFieldDto.name);
    writer.writeStringValue("object_type_owner", defineTargetFieldDto.object_type_owner);
    writer.writeAdditionalData(defineTargetFieldDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeEmail(writer: SerializationWriter, email: Partial<Email> | undefined = {}) : void {
    writer.writeStringValue("email_address", email.email_address);
    writer.writeStringValue("email_address_type", email.email_address_type);
    writer.writeStringValue("owner_type", email.owner_type);
    writer.writeAdditionalData(email.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeLoginDto(writer: SerializationWriter, loginDto: Partial<LoginDto> | undefined = {}) : void {
    writer.writeStringValue("email", loginDto.email);
    writer.writeStringValue("id_user", loginDto.id_user);
    writer.writeStringValue("password_hash", loginDto.password_hash);
    writer.writeAdditionalData(loginDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeMapFieldToProviderDto(writer: SerializationWriter, mapFieldToProviderDto: Partial<MapFieldToProviderDto> | undefined = {}) : void {
    writer.writeStringValue("attributeId", mapFieldToProviderDto.attributeId);
    writer.writeStringValue("linked_user_id", mapFieldToProviderDto.linked_user_id);
    writer.writeStringValue("source_custom_field_id", mapFieldToProviderDto.source_custom_field_id);
    writer.writeStringValue("source_provider", mapFieldToProviderDto.source_provider);
    writer.writeAdditionalData(mapFieldToProviderDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePassThroughRequestDto(writer: SerializationWriter, passThroughRequestDto: Partial<PassThroughRequestDto> | undefined = {}) : void {
    writer.writeObjectValue<PassThroughRequestDto_data>("data", passThroughRequestDto.data, serializePassThroughRequestDto_data);
    writer.writeObjectValue<PassThroughRequestDto_headers>("headers", passThroughRequestDto.headers, serializePassThroughRequestDto_headers);
    writer.writeEnumValue<PassThroughRequestDto_method>("method", passThroughRequestDto.method);
    writer.writeStringValue("path", passThroughRequestDto.path);
    writer.writeAdditionalData(passThroughRequestDto.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePassThroughRequestDto_data(writer: SerializationWriter, passThroughRequestDto_data: Partial<PassThroughRequestDto_data> | undefined = {}) : void {
    writer.writeAdditionalData(passThroughRequestDto_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePassThroughRequestDto_headers(writer: SerializationWriter, passThroughRequestDto_headers: Partial<PassThroughRequestDto_headers> | undefined = {}) : void {
    writer.writeAdditionalData(passThroughRequestDto_headers.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePassThroughResponse(writer: SerializationWriter, passThroughResponse: Partial<PassThroughResponse> | undefined = {}) : void {
    writer.writeObjectValue<PassThroughResponse_data>("data", passThroughResponse.data, serializePassThroughResponse_data);
    writer.writeNumberValue("status", passThroughResponse.status);
    writer.writeStringValue("url", passThroughResponse.url);
    writer.writeAdditionalData(passThroughResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePassThroughResponse_data(writer: SerializationWriter, passThroughResponse_data: Partial<PassThroughResponse_data> | undefined = {}) : void {
    writer.writeAdditionalData(passThroughResponse_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePhone(writer: SerializationWriter, phone: Partial<Phone> | undefined = {}) : void {
    writer.writeStringValue("owner_type", phone.owner_type);
    writer.writeStringValue("phone_number", phone.phone_number);
    writer.writeStringValue("phone_type", phone.phone_type);
    writer.writeAdditionalData(phone.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAccountOutput(writer: SerializationWriter, unifiedAccountOutput: Partial<UnifiedAccountOutput> | undefined = {}) : void {
    writer.writeCollectionOfPrimitiveValues<string>("domains", unifiedAccountOutput.domains);
    writer.writeObjectValue<UnifiedAccountOutput_field_mappings>("field_mappings", unifiedAccountOutput.field_mappings, serializeUnifiedAccountOutput_field_mappings);
    writer.writeStringValue("id", unifiedAccountOutput.id);
    writer.writeStringValue("name", unifiedAccountOutput.name);
    writer.writeObjectValue<UnifiedAccountOutput_remote_data>("remote_data", unifiedAccountOutput.remote_data, serializeUnifiedAccountOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedAccountOutput.remote_id);
    writer.writeAdditionalData(unifiedAccountOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAccountOutput_field_mappings(writer: SerializationWriter, unifiedAccountOutput_field_mappings: Partial<UnifiedAccountOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedAccountOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAccountOutput_remote_data(writer: SerializationWriter, unifiedAccountOutput_remote_data: Partial<UnifiedAccountOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedAccountOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAttachmentInput(writer: SerializationWriter, unifiedAttachmentInput: Partial<UnifiedAttachmentInput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedAttachmentInput_field_mappings>("field_mappings", unifiedAttachmentInput.field_mappings, serializeUnifiedAttachmentInput_field_mappings);
    writer.writeStringValue("file_name", unifiedAttachmentInput.file_name);
    writer.writeStringValue("file_url", unifiedAttachmentInput.file_url);
    writer.writeStringValue("uploader", unifiedAttachmentInput.uploader);
    writer.writeAdditionalData(unifiedAttachmentInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAttachmentInput_field_mappings(writer: SerializationWriter, unifiedAttachmentInput_field_mappings: Partial<UnifiedAttachmentInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedAttachmentInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAttachmentOutput(writer: SerializationWriter, unifiedAttachmentOutput: Partial<UnifiedAttachmentOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedAttachmentOutput_field_mappings>("field_mappings", unifiedAttachmentOutput.field_mappings, serializeUnifiedAttachmentOutput_field_mappings);
    writer.writeStringValue("file_name", unifiedAttachmentOutput.file_name);
    writer.writeStringValue("file_url", unifiedAttachmentOutput.file_url);
    writer.writeStringValue("id", unifiedAttachmentOutput.id);
    writer.writeObjectValue<UnifiedAttachmentOutput_remote_data>("remote_data", unifiedAttachmentOutput.remote_data, serializeUnifiedAttachmentOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedAttachmentOutput.remote_id);
    writer.writeStringValue("uploader", unifiedAttachmentOutput.uploader);
    writer.writeAdditionalData(unifiedAttachmentOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAttachmentOutput_field_mappings(writer: SerializationWriter, unifiedAttachmentOutput_field_mappings: Partial<UnifiedAttachmentOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedAttachmentOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedAttachmentOutput_remote_data(writer: SerializationWriter, unifiedAttachmentOutput_remote_data: Partial<UnifiedAttachmentOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedAttachmentOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCommentInput(writer: SerializationWriter, unifiedCommentInput: Partial<UnifiedCommentInput> | undefined = {}) : void {
    writer.writeCollectionOfPrimitiveValues<string>("attachments", unifiedCommentInput.attachments);
    writer.writeStringValue("body", unifiedCommentInput.body);
    writer.writeStringValue("contact_id", unifiedCommentInput.contact_id);
    writer.writeStringValue("creator_type", unifiedCommentInput.creator_type);
    writer.writeStringValue("html_body", unifiedCommentInput.html_body);
    writer.writeBooleanValue("is_private", unifiedCommentInput.is_private);
    writer.writeStringValue("ticket_id", unifiedCommentInput.ticket_id);
    writer.writeStringValue("user_id", unifiedCommentInput.user_id);
    writer.writeAdditionalData(unifiedCommentInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCommentOutput(writer: SerializationWriter, unifiedCommentOutput: Partial<UnifiedCommentOutput> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<UnifiedAttachmentOutput>("attachments", unifiedCommentOutput.attachments, serializeUnifiedAttachmentOutput);
    writer.writeStringValue("body", unifiedCommentOutput.body);
    writer.writeStringValue("contact_id", unifiedCommentOutput.contact_id);
    writer.writeStringValue("creator_type", unifiedCommentOutput.creator_type);
    writer.writeStringValue("html_body", unifiedCommentOutput.html_body);
    writer.writeStringValue("id", unifiedCommentOutput.id);
    writer.writeBooleanValue("is_private", unifiedCommentOutput.is_private);
    writer.writeObjectValue<UnifiedCommentOutput_remote_data>("remote_data", unifiedCommentOutput.remote_data, serializeUnifiedCommentOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedCommentOutput.remote_id);
    writer.writeStringValue("ticket_id", unifiedCommentOutput.ticket_id);
    writer.writeStringValue("user_id", unifiedCommentOutput.user_id);
    writer.writeAdditionalData(unifiedCommentOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCommentOutput_remote_data(writer: SerializationWriter, unifiedCommentOutput_remote_data: Partial<UnifiedCommentOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedCommentOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCompanyInput(writer: SerializationWriter, unifiedCompanyInput: Partial<UnifiedCompanyInput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedCompanyInput_field_mappings>("field_mappings", unifiedCompanyInput.field_mappings, serializeUnifiedCompanyInput_field_mappings);
    writer.writeAdditionalData(unifiedCompanyInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCompanyInput_field_mappings(writer: SerializationWriter, unifiedCompanyInput_field_mappings: Partial<UnifiedCompanyInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedCompanyInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCompanyOutput(writer: SerializationWriter, unifiedCompanyOutput: Partial<UnifiedCompanyOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedCompanyOutput_field_mappings>("field_mappings", unifiedCompanyOutput.field_mappings, serializeUnifiedCompanyOutput_field_mappings);
    writer.writeStringValue("id", unifiedCompanyOutput.id);
    writer.writeObjectValue<UnifiedCompanyOutput_remote_data>("remote_data", unifiedCompanyOutput.remote_data, serializeUnifiedCompanyOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedCompanyOutput.remote_id);
    writer.writeAdditionalData(unifiedCompanyOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCompanyOutput_field_mappings(writer: SerializationWriter, unifiedCompanyOutput_field_mappings: Partial<UnifiedCompanyOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedCompanyOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedCompanyOutput_remote_data(writer: SerializationWriter, unifiedCompanyOutput_remote_data: Partial<UnifiedCompanyOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedCompanyOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedContactInput(writer: SerializationWriter, unifiedContactInput: Partial<UnifiedContactInput> | undefined = {}) : void {
    writer.writeCollectionOfObjectValues<Address>("addresses", unifiedContactInput.addresses, serializeAddress);
    writer.writeCollectionOfObjectValues<Email>("email_addresses", unifiedContactInput.email_addresses, serializeEmail);
    writer.writeObjectValue<UnifiedContactInput_field_mappings>("field_mappings", unifiedContactInput.field_mappings, serializeUnifiedContactInput_field_mappings);
    writer.writeStringValue("first_name", unifiedContactInput.first_name);
    writer.writeStringValue("last_name", unifiedContactInput.last_name);
    writer.writeCollectionOfObjectValues<Phone>("phone_numbers", unifiedContactInput.phone_numbers, serializePhone);
    writer.writeStringValue("user_id", unifiedContactInput.user_id);
    writer.writeAdditionalData(unifiedContactInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedContactInput_field_mappings(writer: SerializationWriter, unifiedContactInput_field_mappings: Partial<UnifiedContactInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedContactInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedContactOutput(writer: SerializationWriter, unifiedContactOutput: Partial<UnifiedContactOutput> | undefined = {}) : void {
    writer.writeStringValue("details", unifiedContactOutput.details);
    writer.writeStringValue("email_address", unifiedContactOutput.email_address);
    writer.writeObjectValue<UnifiedContactOutput_field_mappings>("field_mappings", unifiedContactOutput.field_mappings, serializeUnifiedContactOutput_field_mappings);
    writer.writeStringValue("id", unifiedContactOutput.id);
    writer.writeStringValue("name", unifiedContactOutput.name);
    writer.writeStringValue("phone_number", unifiedContactOutput.phone_number);
    writer.writeObjectValue<UnifiedContactOutput_remote_data>("remote_data", unifiedContactOutput.remote_data, serializeUnifiedContactOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedContactOutput.remote_id);
    writer.writeAdditionalData(unifiedContactOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedContactOutput_field_mappings(writer: SerializationWriter, unifiedContactOutput_field_mappings: Partial<UnifiedContactOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedContactOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedContactOutput_remote_data(writer: SerializationWriter, unifiedContactOutput_remote_data: Partial<UnifiedContactOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedContactOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedDealInput(writer: SerializationWriter, unifiedDealInput: Partial<UnifiedDealInput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedDealInput_field_mappings>("field_mappings", unifiedDealInput.field_mappings, serializeUnifiedDealInput_field_mappings);
    writer.writeAdditionalData(unifiedDealInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedDealInput_field_mappings(writer: SerializationWriter, unifiedDealInput_field_mappings: Partial<UnifiedDealInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedDealInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedDealOutput(writer: SerializationWriter, unifiedDealOutput: Partial<UnifiedDealOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedDealOutput_field_mappings>("field_mappings", unifiedDealOutput.field_mappings, serializeUnifiedDealOutput_field_mappings);
    writer.writeStringValue("id", unifiedDealOutput.id);
    writer.writeObjectValue<UnifiedDealOutput_remote_data>("remote_data", unifiedDealOutput.remote_data, serializeUnifiedDealOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedDealOutput.remote_id);
    writer.writeAdditionalData(unifiedDealOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedDealOutput_field_mappings(writer: SerializationWriter, unifiedDealOutput_field_mappings: Partial<UnifiedDealOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedDealOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedDealOutput_remote_data(writer: SerializationWriter, unifiedDealOutput_remote_data: Partial<UnifiedDealOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedDealOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedEngagementInput(writer: SerializationWriter, unifiedEngagementInput: Partial<UnifiedEngagementInput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedEngagementInput_field_mappings>("field_mappings", unifiedEngagementInput.field_mappings, serializeUnifiedEngagementInput_field_mappings);
    writer.writeAdditionalData(unifiedEngagementInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedEngagementInput_field_mappings(writer: SerializationWriter, unifiedEngagementInput_field_mappings: Partial<UnifiedEngagementInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedEngagementInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedEngagementOutput(writer: SerializationWriter, unifiedEngagementOutput: Partial<UnifiedEngagementOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedEngagementOutput_field_mappings>("field_mappings", unifiedEngagementOutput.field_mappings, serializeUnifiedEngagementOutput_field_mappings);
    writer.writeStringValue("id", unifiedEngagementOutput.id);
    writer.writeObjectValue<UnifiedEngagementOutput_remote_data>("remote_data", unifiedEngagementOutput.remote_data, serializeUnifiedEngagementOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedEngagementOutput.remote_id);
    writer.writeAdditionalData(unifiedEngagementOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedEngagementOutput_field_mappings(writer: SerializationWriter, unifiedEngagementOutput_field_mappings: Partial<UnifiedEngagementOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedEngagementOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedEngagementOutput_remote_data(writer: SerializationWriter, unifiedEngagementOutput_remote_data: Partial<UnifiedEngagementOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedEngagementOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedNoteInput(writer: SerializationWriter, unifiedNoteInput: Partial<UnifiedNoteInput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedNoteInput_field_mappings>("field_mappings", unifiedNoteInput.field_mappings, serializeUnifiedNoteInput_field_mappings);
    writer.writeAdditionalData(unifiedNoteInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedNoteInput_field_mappings(writer: SerializationWriter, unifiedNoteInput_field_mappings: Partial<UnifiedNoteInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedNoteInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedNoteOutput(writer: SerializationWriter, unifiedNoteOutput: Partial<UnifiedNoteOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedNoteOutput_field_mappings>("field_mappings", unifiedNoteOutput.field_mappings, serializeUnifiedNoteOutput_field_mappings);
    writer.writeStringValue("id", unifiedNoteOutput.id);
    writer.writeObjectValue<UnifiedNoteOutput_remote_data>("remote_data", unifiedNoteOutput.remote_data, serializeUnifiedNoteOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedNoteOutput.remote_id);
    writer.writeAdditionalData(unifiedNoteOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedNoteOutput_field_mappings(writer: SerializationWriter, unifiedNoteOutput_field_mappings: Partial<UnifiedNoteOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedNoteOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedNoteOutput_remote_data(writer: SerializationWriter, unifiedNoteOutput_remote_data: Partial<UnifiedNoteOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedNoteOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedStageOutput(writer: SerializationWriter, unifiedStageOutput: Partial<UnifiedStageOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedStageOutput_field_mappings>("field_mappings", unifiedStageOutput.field_mappings, serializeUnifiedStageOutput_field_mappings);
    writer.writeStringValue("id", unifiedStageOutput.id);
    writer.writeObjectValue<UnifiedStageOutput_remote_data>("remote_data", unifiedStageOutput.remote_data, serializeUnifiedStageOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedStageOutput.remote_id);
    writer.writeAdditionalData(unifiedStageOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedStageOutput_field_mappings(writer: SerializationWriter, unifiedStageOutput_field_mappings: Partial<UnifiedStageOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedStageOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedStageOutput_remote_data(writer: SerializationWriter, unifiedStageOutput_remote_data: Partial<UnifiedStageOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedStageOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTagOutput(writer: SerializationWriter, unifiedTagOutput: Partial<UnifiedTagOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedTagOutput_field_mappings>("field_mappings", unifiedTagOutput.field_mappings, serializeUnifiedTagOutput_field_mappings);
    writer.writeStringValue("id", unifiedTagOutput.id);
    writer.writeStringValue("name", unifiedTagOutput.name);
    writer.writeObjectValue<UnifiedTagOutput_remote_data>("remote_data", unifiedTagOutput.remote_data, serializeUnifiedTagOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedTagOutput.remote_id);
    writer.writeAdditionalData(unifiedTagOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTagOutput_field_mappings(writer: SerializationWriter, unifiedTagOutput_field_mappings: Partial<UnifiedTagOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTagOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTagOutput_remote_data(writer: SerializationWriter, unifiedTagOutput_remote_data: Partial<UnifiedTagOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTagOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTaskInput(writer: SerializationWriter, unifiedTaskInput: Partial<UnifiedTaskInput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedTaskInput_field_mappings>("field_mappings", unifiedTaskInput.field_mappings, serializeUnifiedTaskInput_field_mappings);
    writer.writeAdditionalData(unifiedTaskInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTaskInput_field_mappings(writer: SerializationWriter, unifiedTaskInput_field_mappings: Partial<UnifiedTaskInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTaskInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTaskOutput(writer: SerializationWriter, unifiedTaskOutput: Partial<UnifiedTaskOutput> | undefined = {}) : void {
    writer.writeObjectValue<UnifiedTaskOutput_field_mappings>("field_mappings", unifiedTaskOutput.field_mappings, serializeUnifiedTaskOutput_field_mappings);
    writer.writeStringValue("id", unifiedTaskOutput.id);
    writer.writeObjectValue<UnifiedTaskOutput_remote_data>("remote_data", unifiedTaskOutput.remote_data, serializeUnifiedTaskOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedTaskOutput.remote_id);
    writer.writeAdditionalData(unifiedTaskOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTaskOutput_field_mappings(writer: SerializationWriter, unifiedTaskOutput_field_mappings: Partial<UnifiedTaskOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTaskOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTaskOutput_remote_data(writer: SerializationWriter, unifiedTaskOutput_remote_data: Partial<UnifiedTaskOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTaskOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTeamOutput(writer: SerializationWriter, unifiedTeamOutput: Partial<UnifiedTeamOutput> | undefined = {}) : void {
    writer.writeStringValue("description", unifiedTeamOutput.description);
    writer.writeObjectValue<UnifiedTeamOutput_field_mappings>("field_mappings", unifiedTeamOutput.field_mappings, serializeUnifiedTeamOutput_field_mappings);
    writer.writeStringValue("id", unifiedTeamOutput.id);
    writer.writeStringValue("name", unifiedTeamOutput.name);
    writer.writeObjectValue<UnifiedTeamOutput_remote_data>("remote_data", unifiedTeamOutput.remote_data, serializeUnifiedTeamOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedTeamOutput.remote_id);
    writer.writeAdditionalData(unifiedTeamOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTeamOutput_field_mappings(writer: SerializationWriter, unifiedTeamOutput_field_mappings: Partial<UnifiedTeamOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTeamOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTeamOutput_remote_data(writer: SerializationWriter, unifiedTeamOutput_remote_data: Partial<UnifiedTeamOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTeamOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTicketInput(writer: SerializationWriter, unifiedTicketInput: Partial<UnifiedTicketInput> | undefined = {}) : void {
    writer.writeStringValue("account_id", unifiedTicketInput.account_id);
    writer.writeCollectionOfPrimitiveValues<string>("assigned_to", unifiedTicketInput.assigned_to);
    writer.writeCollectionOfPrimitiveValues<string>("comment", unifiedTicketInput.comment);
    writer.writeDateValue("completed_at", unifiedTicketInput.completed_at);
    writer.writeStringValue("contact_id", unifiedTicketInput.contact_id);
    writer.writeCollectionOfPrimitiveValues<string>("description", unifiedTicketInput.description);
    writer.writeDateValue("due_date", unifiedTicketInput.due_date);
    writer.writeObjectValue<UnifiedTicketInput_field_mappings>("field_mappings", unifiedTicketInput.field_mappings, serializeUnifiedTicketInput_field_mappings);
    writer.writeStringValue("name", unifiedTicketInput.name);
    writer.writeStringValue("parent_ticket", unifiedTicketInput.parent_ticket);
    writer.writeStringValue("priority", unifiedTicketInput.priority);
    writer.writeStringValue("status", unifiedTicketInput.status);
    writer.writeCollectionOfPrimitiveValues<string>("tags", unifiedTicketInput.tags);
    writer.writeStringValue("type", unifiedTicketInput.type);
    writer.writeAdditionalData(unifiedTicketInput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTicketInput_field_mappings(writer: SerializationWriter, unifiedTicketInput_field_mappings: Partial<UnifiedTicketInput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTicketInput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTicketOutput(writer: SerializationWriter, unifiedTicketOutput: Partial<UnifiedTicketOutput> | undefined = {}) : void {
    writer.writeStringValue("account_id", unifiedTicketOutput.account_id);
    writer.writeCollectionOfPrimitiveValues<string>("assigned_to", unifiedTicketOutput.assigned_to);
    writer.writeCollectionOfPrimitiveValues<string>("comment", unifiedTicketOutput.comment);
    writer.writeDateValue("completed_at", unifiedTicketOutput.completed_at);
    writer.writeStringValue("contact_id", unifiedTicketOutput.contact_id);
    writer.writeCollectionOfPrimitiveValues<string>("description", unifiedTicketOutput.description);
    writer.writeDateValue("due_date", unifiedTicketOutput.due_date);
    writer.writeObjectValue<UnifiedTicketOutput_field_mappings>("field_mappings", unifiedTicketOutput.field_mappings, serializeUnifiedTicketOutput_field_mappings);
    writer.writeStringValue("id", unifiedTicketOutput.id);
    writer.writeStringValue("name", unifiedTicketOutput.name);
    writer.writeStringValue("parent_ticket", unifiedTicketOutput.parent_ticket);
    writer.writeStringValue("priority", unifiedTicketOutput.priority);
    writer.writeObjectValue<UnifiedTicketOutput_remote_data>("remote_data", unifiedTicketOutput.remote_data, serializeUnifiedTicketOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedTicketOutput.remote_id);
    writer.writeStringValue("status", unifiedTicketOutput.status);
    writer.writeCollectionOfPrimitiveValues<string>("tags", unifiedTicketOutput.tags);
    writer.writeStringValue("type", unifiedTicketOutput.type);
    writer.writeAdditionalData(unifiedTicketOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTicketOutput_field_mappings(writer: SerializationWriter, unifiedTicketOutput_field_mappings: Partial<UnifiedTicketOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTicketOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedTicketOutput_remote_data(writer: SerializationWriter, unifiedTicketOutput_remote_data: Partial<UnifiedTicketOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedTicketOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedUserOutput(writer: SerializationWriter, unifiedUserOutput: Partial<UnifiedUserOutput> | undefined = {}) : void {
    writer.writeStringValue("email_address", unifiedUserOutput.email_address);
    writer.writeObjectValue<UnifiedUserOutput_field_mappings>("field_mappings", unifiedUserOutput.field_mappings, serializeUnifiedUserOutput_field_mappings);
    writer.writeStringValue("id", unifiedUserOutput.id);
    writer.writeStringValue("name", unifiedUserOutput.name);
    writer.writeObjectValue<UnifiedUserOutput_remote_data>("remote_data", unifiedUserOutput.remote_data, serializeUnifiedUserOutput_remote_data);
    writer.writeStringValue("remote_id", unifiedUserOutput.remote_id);
    writer.writeCollectionOfPrimitiveValues<string>("teams", unifiedUserOutput.teams);
    writer.writeAdditionalData(unifiedUserOutput.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedUserOutput_field_mappings(writer: SerializationWriter, unifiedUserOutput_field_mappings: Partial<UnifiedUserOutput_field_mappings> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedUserOutput_field_mappings.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUnifiedUserOutput_remote_data(writer: SerializationWriter, unifiedUserOutput_remote_data: Partial<UnifiedUserOutput_remote_data> | undefined = {}) : void {
    writer.writeAdditionalData(unifiedUserOutput_remote_data.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeWebhookDto(writer: SerializationWriter, webhookDto: Partial<WebhookDto> | undefined = {}) : void {
    writer.writeStringValue("description", webhookDto.description);
    writer.writeStringValue("id_project", webhookDto.id_project);
    writer.writeCollectionOfPrimitiveValues<string>("scope", webhookDto.scope);
    writer.writeStringValue("url", webhookDto.url);
    writer.writeAdditionalData(webhookDto.additionalData);
}
export interface UnifiedAccountOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The domains of the account
     */
    domains?: string[];
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedAccountOutput_field_mappings;
    /**
     * The uuid of the account
     */
    id?: string;
    /**
     * The name of the account
     */
    name?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedAccountOutput_remote_data;
    /**
     * The id of the account in the context of the 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedAccountOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedAccountOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedAttachmentInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedAttachmentInput_field_mappings;
    /**
     * The file name of the attachment
     */
    file_name?: string;
    /**
     * The file url of the attachment
     */
    file_url?: string;
    /**
     * The uploader's uuid of the attachment
     */
    uploader?: string;
}
export interface UnifiedAttachmentInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedAttachmentOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedAttachmentOutput_field_mappings;
    /**
     * The file name of the attachment
     */
    file_name?: string;
    /**
     * The file url of the attachment
     */
    file_url?: string;
    /**
     * The uuid of the attachment
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedAttachmentOutput_remote_data;
    /**
     * The id of the attachment in the context of the 3rd Party
     */
    remote_id?: string;
    /**
     * The uploader's uuid of the attachment
     */
    uploader?: string;
}
export interface UnifiedAttachmentOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedAttachmentOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedCommentInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The attachements uuids tied to the comment
     */
    attachments?: string[];
    /**
     * The body of the comment
     */
    body?: string;
    /**
     * The uuid of the contact which the comment belongs to (if no user_id specified)
     */
    contact_id?: string;
    /**
     * The creator type of the comment (either user or contact)
     */
    creator_type?: string;
    /**
     * The html body of the comment
     */
    html_body?: string;
    /**
     * The public status of the comment
     */
    is_private?: boolean;
    /**
     * The uuid of the ticket the comment is tied to
     */
    ticket_id?: string;
    /**
     * The uuid of the user which the comment belongs to (if no contact_id specified)
     */
    user_id?: string;
}
export interface UnifiedCommentOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The attachemnets tied to the comment
     */
    attachments?: UnifiedAttachmentOutput[];
    /**
     * The body of the comment
     */
    body?: string;
    /**
     * The uuid of the contact which the comment belongs to (if no user_id specified)
     */
    contact_id?: string;
    /**
     * The creator type of the comment (either user or contact)
     */
    creator_type?: string;
    /**
     * The html body of the comment
     */
    html_body?: string;
    /**
     * The uuid of the comment
     */
    id?: string;
    /**
     * The public status of the comment
     */
    is_private?: boolean;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedCommentOutput_remote_data;
    /**
     * The id of the comment in the context of the 3rd Party
     */
    remote_id?: string;
    /**
     * The uuid of the ticket the comment is tied to
     */
    ticket_id?: string;
    /**
     * The uuid of the user which the comment belongs to (if no contact_id specified)
     */
    user_id?: string;
}
export interface UnifiedCommentOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedCompanyInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedCompanyInput_field_mappings;
}
export interface UnifiedCompanyInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedCompanyOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedCompanyOutput_field_mappings;
    /**
     * The uuid of the company
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedCompanyOutput_remote_data;
    /**
     * The id of the company in the context of the Crm 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedCompanyOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedCompanyOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedContactInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The addresses of the contact
     */
    addresses?: Address[];
    /**
     * The email addresses of the contact
     */
    email_addresses?: Email[];
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedContactInput_field_mappings;
    /**
     * The first name of the contact
     */
    first_name?: string;
    /**
     * The last name of the contact
     */
    last_name?: string;
    /**
     * The phone numbers of the contact
     */
    phone_numbers?: Phone[];
    /**
     * The uuid of the user who owns the contact
     */
    user_id?: string;
}
export interface UnifiedContactInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedContactOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The details of the contact
     */
    details?: string;
    /**
     * The email address of the contact
     */
    email_address?: string;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedContactOutput_field_mappings;
    /**
     * The uuid of the contact
     */
    id?: string;
    /**
     * The name of the contact
     */
    name?: string;
    /**
     * The phone number of the contact
     */
    phone_number?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedContactOutput_remote_data;
    /**
     * The id of the contact in the context of the 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedContactOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedContactOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedDealInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedDealInput_field_mappings;
}
export interface UnifiedDealInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedDealOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedDealOutput_field_mappings;
    /**
     * The uuid of the deal
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedDealOutput_remote_data;
    /**
     * The id of the deal in the context of the Crm 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedDealOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedDealOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedEngagementInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedEngagementInput_field_mappings;
}
export interface UnifiedEngagementInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedEngagementOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedEngagementOutput_field_mappings;
    /**
     * The uuid of the engagement
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedEngagementOutput_remote_data;
    /**
     * The id of the engagement in the context of the Crm 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedEngagementOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedEngagementOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedNoteInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedNoteInput_field_mappings;
}
export interface UnifiedNoteInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedNoteOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedNoteOutput_field_mappings;
    /**
     * The uuid of the note
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedNoteOutput_remote_data;
    /**
     * The id of the note in the context of the Crm 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedNoteOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedNoteOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedStageOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedStageOutput_field_mappings;
    /**
     * The uuid of the stage
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedStageOutput_remote_data;
    /**
     * The id of the stage in the context of the Crm 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedStageOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedStageOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTagOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedTagOutput_field_mappings;
    /**
     * The uuid of the tag
     */
    id?: string;
    /**
     * The name of the tag
     */
    name?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedTagOutput_remote_data;
    /**
     * The id of the tag in the context of the 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedTagOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTagOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTaskInput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedTaskInput_field_mappings;
}
export interface UnifiedTaskInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTaskOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedTaskOutput_field_mappings;
    /**
     * The uuid of the task
     */
    id?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedTaskOutput_remote_data;
    /**
     * The id of the task in the context of the Crm 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedTaskOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTaskOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTeamOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The description of the team
     */
    description?: string;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedTeamOutput_field_mappings;
    /**
     * The uuid of the team
     */
    id?: string;
    /**
     * The name of the team
     */
    name?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedTeamOutput_remote_data;
    /**
     * The id of the team in the context of the 3rd Party
     */
    remote_id?: string;
}
export interface UnifiedTeamOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTeamOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTicketInput extends AdditionalDataHolder, Parsable {
    /**
     * The uuid of the account which the ticket belongs to
     */
    account_id?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The users uuids the ticket is assigned to
     */
    assigned_to?: string[];
    /**
     * The users uuids the ticket is assigned to
     */
    comment?: string[];
    /**
     * The date the ticket has been completed
     */
    completed_at?: Date;
    /**
     * The uuid of the contact which the ticket belongs to
     */
    contact_id?: string;
    /**
     * The description of the ticket
     */
    description?: string[];
    /**
     * The date the ticket is due
     */
    due_date?: Date;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedTicketInput_field_mappings;
    /**
     * The name of the ticket
     */
    name?: string;
    /**
     * The uuid of the parent ticket
     */
    parent_ticket?: string;
    /**
     * The priority of the ticket
     */
    priority?: string;
    /**
     * The status of the ticket
     */
    status?: string;
    /**
     * The tags names of the ticket
     */
    tags?: string[];
    /**
     * The type of the ticket
     */
    type?: string;
}
export interface UnifiedTicketInput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTicketOutput extends AdditionalDataHolder, Parsable {
    /**
     * The uuid of the account which the ticket belongs to
     */
    account_id?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The users uuids the ticket is assigned to
     */
    assigned_to?: string[];
    /**
     * The users uuids the ticket is assigned to
     */
    comment?: string[];
    /**
     * The date the ticket has been completed
     */
    completed_at?: Date;
    /**
     * The uuid of the contact which the ticket belongs to
     */
    contact_id?: string;
    /**
     * The description of the ticket
     */
    description?: string[];
    /**
     * The date the ticket is due
     */
    due_date?: Date;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedTicketOutput_field_mappings;
    /**
     * The uuid of the ticket
     */
    id?: string;
    /**
     * The name of the ticket
     */
    name?: string;
    /**
     * The uuid of the parent ticket
     */
    parent_ticket?: string;
    /**
     * The priority of the ticket
     */
    priority?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedTicketOutput_remote_data;
    /**
     * The id of the ticket in the context of the 3rd Party
     */
    remote_id?: string;
    /**
     * The status of the ticket
     */
    status?: string;
    /**
     * The tags names of the ticket
     */
    tags?: string[];
    /**
     * The type of the ticket
     */
    type?: string;
}
export interface UnifiedTicketOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedTicketOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedUserOutput extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The email address of the user
     */
    email_address?: string;
    /**
     * The field_mappings property
     */
    field_mappings?: UnifiedUserOutput_field_mappings;
    /**
     * The uuid of the user
     */
    id?: string;
    /**
     * The name of the user
     */
    name?: string;
    /**
     * The remote_data property
     */
    remote_data?: UnifiedUserOutput_remote_data;
    /**
     * The id of the user in the context of the 3rd Party
     */
    remote_id?: string;
    /**
     * The teams whose the user is part of
     */
    teams?: string[];
}
export interface UnifiedUserOutput_field_mappings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface UnifiedUserOutput_remote_data extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export interface WebhookDto extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The description property
     */
    description?: string;
    /**
     * The id_project property
     */
    id_project?: string;
    /**
     * The scope property
     */
    scope?: string[];
    /**
     * The url property
     */
    url?: string;
}
export const PassThroughRequestDto_methodObject = {
    GET: "GET",
    POST: "POST",
    PATCH: "PATCH",
    DELETE: "DELETE",
    PUT: "PUT",
} as const;
/* tslint:enable */
/* eslint-enable */
